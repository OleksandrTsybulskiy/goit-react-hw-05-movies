{"version":3,"file":"static/js/395.61fe4a7b.chunk.js","mappings":"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","sources":["components/MovieCard/MovieCard.jsx","Pages/MovieDetails/MovieDetails.jsx","api.js"],"sourcesContent":["import React from 'react'\n\nconst MovieCard = ({movieDetails}) => {\n\nconst {poster_path, title, release_date, vote_average, overview, genres} = movieDetails;\n\nconst genresList = genres.map(genre => genre.name).join(', ')\nconst voteAv = (vote_average * 10).toFixed(0)\nconst release = release_date.slice(0,4)\nconst imgUrl = 'https://image.tmdb.org/t/p/w500/'.concat(poster_path);\n\n\n  return (\n    <div>\n    {poster_path ? <img src={imgUrl} alt=''/> : <img src='' alt=''/>}\n    <div>\n        <h2>{title} <span>{release}</span></h2>\n        <p>User score: {voteAv}</p>\n        <p>Overview</p>\n        <p>{overview}</p>\n        <p>Genre: {genresList}</p>\n    </div>\n    </div>\n  )\n}\n\nexport default MovieCard","import { getMovieDetails } from 'api';\nimport MovieCard from 'components/MovieCard/MovieCard';\nimport React, { Suspense, useState, useEffect } from 'react';\nimport {\n  Link,\n  NavLink,\n  Outlet,\n  useLocation,\n  useParams,\n} from 'react-router-dom';\n\nconst MovieDetails = () => {\n  const [movieDetails, setMovieDetails] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    getMovieDetails(movieId).then(setMovieDetails);\n  }, [movieId]);\n\n  if (!movieDetails) {\n    return null;\n  }\n\n  const backLink = location.state?.from ?? '/';\n\n  return (\n    <div>\n      <Link to={backLink}>Go back</Link>\n      <MovieCard movieDetails={movieDetails} />\n      <div>\n        <NavLink to={'cast'} state={{ from: backLink }}>\n          Cast\n        </NavLink>\n        <NavLink to={'reviews'} state={{ from: backLink }}>\n          Reviews\n        </NavLink>\n      </div>\n      <Suspense fallback={null}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst searchParams = new URLSearchParams({\n  api_key: '3fbc168df42f34d24dcb5c096192698e',\n  language: 'en-US',\n});\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`/trending/all/week?${searchParams}`);\n  return data.results;\n};\n\nexport const getMovieByName = async query => {\n  const { data } = await axios.get(\n    `/search/movie?${searchParams}&query=${query}`\n  );\n  return data.results;\n};\n\nexport const getMovieDetails = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}?${searchParams}`);\n  return data;\n};\n\nexport const getMovieCredits = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}/credits?${searchParams}`\n  );\n  return data.cast;\n};\n\nexport const getMovieRewies = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}/reviews?${searchParams}`\n  );\n  return data.results;\n};\n"],"names":["_ref","movieDetails","poster_path","title","release_date","vote_average","overview","genresList","genres","map","genre","name","join","voteAv","toFixed","release","slice","imgUrl","concat","_jsxs","children","_jsx","src","alt","_location$state$from","_location$state","_useState","useState","_useState2","_slicedToArray","setMovieDetails","movieId","useParams","location","useLocation","useEffect","getMovieDetails","then","backLink","state","from","Link","to","MovieCard","NavLink","Suspense","fallback","Outlet","axios","searchParams","URLSearchParams","api_key","language","getTrendingMovies","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$axios$get","data","_context","prev","next","sent","abrupt","results","stop","apply","arguments","getMovieByName","_ref2","_callee2","query","_yield$axios$get2","_context2","_x","_ref3","_callee3","_yield$axios$get3","_context3","_x2","getMovieCredits","_ref4","_callee4","_yield$axios$get4","_context4","cast","_x3","getMovieRewies","_ref5","_callee5","_yield$axios$get5","_context5","_x4"],"sourceRoot":""}